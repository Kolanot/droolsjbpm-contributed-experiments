//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.3-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.05.21 at 09:59:49 PM BST 
//


package mismo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AUS_AssetTypeEnumerated.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AUS_AssetTypeEnumerated">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Automobile"/>
 *     &lt;enumeration value="Bond"/>
 *     &lt;enumeration value="BridgeLoanNotDeposited"/>
 *     &lt;enumeration value="CashOnHand"/>
 *     &lt;enumeration value="CertificateOfDepositTimeDeposit"/>
 *     &lt;enumeration value="CheckingAccount"/>
 *     &lt;enumeration value="EarnestMoneyCashDepositTowardPurchase"/>
 *     &lt;enumeration value="GiftsTotal"/>
 *     &lt;enumeration value="GiftsNotDeposited"/>
 *     &lt;enumeration value="LifeInsurance"/>
 *     &lt;enumeration value="MoneyMarketFund"/>
 *     &lt;enumeration value="MutualFund"/>
 *     &lt;enumeration value="NetWorthOfBusinessOwned"/>
 *     &lt;enumeration value="OtherLiquidAssets"/>
 *     &lt;enumeration value="OtherNonLiquidAssets"/>
 *     &lt;enumeration value="PendingNetSaleProceedsFromRealEstateAssets"/>
 *     &lt;enumeration value="RelocationMoney"/>
 *     &lt;enumeration value="RetirementFund"/>
 *     &lt;enumeration value="SaleOtherAssets"/>
 *     &lt;enumeration value="SavingsAccount"/>
 *     &lt;enumeration value="SecuredBorrowedFundsNotDeposited"/>
 *     &lt;enumeration value="Stock"/>
 *     &lt;enumeration value="TrustAccount"/>
 *     &lt;enumeration value="BorrowerEstimatedTotalAssets"/>
 *     &lt;enumeration value="GrantsNotDeposited"/>
 *     &lt;enumeration value="RealEstateOwned"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AUS_AssetTypeEnumerated")
@XmlEnum
public enum AUSAssetTypeEnumerated {

    @XmlEnumValue("Automobile")
    AUTOMOBILE("Automobile"),
    @XmlEnumValue("Bond")
    BOND("Bond"),
    @XmlEnumValue("BridgeLoanNotDeposited")
    BRIDGE_LOAN_NOT_DEPOSITED("BridgeLoanNotDeposited"),
    @XmlEnumValue("CashOnHand")
    CASH_ON_HAND("CashOnHand"),
    @XmlEnumValue("CertificateOfDepositTimeDeposit")
    CERTIFICATE_OF_DEPOSIT_TIME_DEPOSIT("CertificateOfDepositTimeDeposit"),
    @XmlEnumValue("CheckingAccount")
    CHECKING_ACCOUNT("CheckingAccount"),
    @XmlEnumValue("EarnestMoneyCashDepositTowardPurchase")
    EARNEST_MONEY_CASH_DEPOSIT_TOWARD_PURCHASE("EarnestMoneyCashDepositTowardPurchase"),
    @XmlEnumValue("GiftsTotal")
    GIFTS_TOTAL("GiftsTotal"),
    @XmlEnumValue("GiftsNotDeposited")
    GIFTS_NOT_DEPOSITED("GiftsNotDeposited"),
    @XmlEnumValue("LifeInsurance")
    LIFE_INSURANCE("LifeInsurance"),
    @XmlEnumValue("MoneyMarketFund")
    MONEY_MARKET_FUND("MoneyMarketFund"),
    @XmlEnumValue("MutualFund")
    MUTUAL_FUND("MutualFund"),
    @XmlEnumValue("NetWorthOfBusinessOwned")
    NET_WORTH_OF_BUSINESS_OWNED("NetWorthOfBusinessOwned"),
    @XmlEnumValue("OtherLiquidAssets")
    OTHER_LIQUID_ASSETS("OtherLiquidAssets"),
    @XmlEnumValue("OtherNonLiquidAssets")
    OTHER_NON_LIQUID_ASSETS("OtherNonLiquidAssets"),
    @XmlEnumValue("PendingNetSaleProceedsFromRealEstateAssets")
    PENDING_NET_SALE_PROCEEDS_FROM_REAL_ESTATE_ASSETS("PendingNetSaleProceedsFromRealEstateAssets"),
    @XmlEnumValue("RelocationMoney")
    RELOCATION_MONEY("RelocationMoney"),
    @XmlEnumValue("RetirementFund")
    RETIREMENT_FUND("RetirementFund"),
    @XmlEnumValue("SaleOtherAssets")
    SALE_OTHER_ASSETS("SaleOtherAssets"),
    @XmlEnumValue("SavingsAccount")
    SAVINGS_ACCOUNT("SavingsAccount"),
    @XmlEnumValue("SecuredBorrowedFundsNotDeposited")
    SECURED_BORROWED_FUNDS_NOT_DEPOSITED("SecuredBorrowedFundsNotDeposited"),
    @XmlEnumValue("Stock")
    STOCK("Stock"),
    @XmlEnumValue("TrustAccount")
    TRUST_ACCOUNT("TrustAccount"),
    @XmlEnumValue("BorrowerEstimatedTotalAssets")
    BORROWER_ESTIMATED_TOTAL_ASSETS("BorrowerEstimatedTotalAssets"),
    @XmlEnumValue("GrantsNotDeposited")
    GRANTS_NOT_DEPOSITED("GrantsNotDeposited"),
    @XmlEnumValue("RealEstateOwned")
    REAL_ESTATE_OWNED("RealEstateOwned");
    private final String value;

    AUSAssetTypeEnumerated(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AUSAssetTypeEnumerated fromValue(String v) {
        for (AUSAssetTypeEnumerated c: AUSAssetTypeEnumerated.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
