//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.3-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.05.21 at 09:59:49 PM BST 
//


package mismo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AUS_PropertyCategoryTypeEnumerated.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AUS_PropertyCategoryTypeEnumerated">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Attached"/>
 *     &lt;enumeration value="Church"/>
 *     &lt;enumeration value="CommercialNonResidential"/>
 *     &lt;enumeration value="CommercialResidential"/>
 *     &lt;enumeration value="Detached"/>
 *     &lt;enumeration value="Farm"/>
 *     &lt;enumeration value="HighRise"/>
 *     &lt;enumeration value="LandAndLots"/>
 *     &lt;enumeration value="LowRise"/>
 *     &lt;enumeration value="Manufactured"/>
 *     &lt;enumeration value="ManufacturedMultiWide"/>
 *     &lt;enumeration value="ManufacturedSingleWide"/>
 *     &lt;enumeration value="MobileHome"/>
 *     &lt;enumeration value="Modular"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="SiteBuilt"/>
 *     &lt;enumeration value="Stacked"/>
 *     &lt;enumeration value="TownhouseRowhouse"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AUS_PropertyCategoryTypeEnumerated")
@XmlEnum
public enum AUSPropertyCategoryTypeEnumerated {

    @XmlEnumValue("Attached")
    ATTACHED("Attached"),
    @XmlEnumValue("Church")
    CHURCH("Church"),
    @XmlEnumValue("CommercialNonResidential")
    COMMERCIAL_NON_RESIDENTIAL("CommercialNonResidential"),
    @XmlEnumValue("CommercialResidential")
    COMMERCIAL_RESIDENTIAL("CommercialResidential"),
    @XmlEnumValue("Detached")
    DETACHED("Detached"),
    @XmlEnumValue("Farm")
    FARM("Farm"),
    @XmlEnumValue("HighRise")
    HIGH_RISE("HighRise"),
    @XmlEnumValue("LandAndLots")
    LAND_AND_LOTS("LandAndLots"),
    @XmlEnumValue("LowRise")
    LOW_RISE("LowRise"),
    @XmlEnumValue("Manufactured")
    MANUFACTURED("Manufactured"),
    @XmlEnumValue("ManufacturedMultiWide")
    MANUFACTURED_MULTI_WIDE("ManufacturedMultiWide"),
    @XmlEnumValue("ManufacturedSingleWide")
    MANUFACTURED_SINGLE_WIDE("ManufacturedSingleWide"),
    @XmlEnumValue("MobileHome")
    MOBILE_HOME("MobileHome"),
    @XmlEnumValue("Modular")
    MODULAR("Modular"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("SiteBuilt")
    SITE_BUILT("SiteBuilt"),
    @XmlEnumValue("Stacked")
    STACKED("Stacked"),
    @XmlEnumValue("TownhouseRowhouse")
    TOWNHOUSE_ROWHOUSE("TownhouseRowhouse");
    private final String value;

    AUSPropertyCategoryTypeEnumerated(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AUSPropertyCategoryTypeEnumerated fromValue(String v) {
        for (AUSPropertyCategoryTypeEnumerated c: AUSPropertyCategoryTypeEnumerated.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
