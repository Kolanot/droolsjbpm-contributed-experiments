package dispatch

/*
 * Copyright 2007 JBoss Inc
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import benchmarks.dispatch.fact.derived.*
import benchmarks.dispatch.fact.independent.*
import java.util.Date

expander dispatch.dsl

rule "Distance to Job Score - Extra Large"
	salience -10
	when
		j: Job()
		job dispatchable
		w: Worker(vehicleSize == VehicleSize.EXTRA_LARGE)
		no exclusions

		dist_mr: DecimalInfo(jobId == j.jobId, workerId == w.workerId, type == Info.Type.DISTANCE_TO_JOB_MILES, dist: value >= 100);
		MaxRadius(jobId == j.jobId, maxRadius >= dist)
	then 
		ScoreComponent sc = new ScoreComponent(j,
			w,
			ScoreComponent.Type.EXCESSIVE_DISTANCE_TO_JOB,
			- 0.55 * (dist - 100));
		insertLogical(sc);
end

rule "Distance to Job Score - Regular"
	salience -10
	when
		j: Job()
		job dispatchable
		w: Worker(vehicleSize != VehicleSize.EXTRA_LARGE)
		no exclusions
		dist_mr: DecimalInfo(jobId == j.jobId, workerId == w.workerId, type == Info.Type.DISTANCE_TO_JOB_MILES, dist: value >= 100);
		MaxRadius(jobId == j.jobId, maxRadius >= dist)
	then 
		ScoreComponent sc = new ScoreComponent(j,
			w,
			ScoreComponent.Type.EXCESSIVE_DISTANCE_TO_JOB,
			- 0.4 * (dist - 100));
		insertLogical(sc);
end

rule "Late to Job Score"
	salience -10
	when
		j : Job 
		job dispatchable
		w : Worker()
		no exclusions
		within range
		i: DecimalInfo(jobId == j.jobId, workerId == w.workerId,
			type == Info.Type.MINUTES_LATE_TO_JOB, minutesLate: value > 0)
	then 
		ScoreComponent sc = new ScoreComponent(j,
			w,
			ScoreComponent.Type.LATE_TO_JOB,
			- 400 - minutesLate * 0.2);
		insertLogical(sc);
end